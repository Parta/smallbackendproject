# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    App\Api\Provider\ApiUrlProvider:
        arguments:
            $apiSettings: "%api_urls_settings%"
            
    App\Api\Provider\LoginApiRequestDataProvider:
        arguments:
            $grantType: "%env(TOTALSOCIAL_API_GRANT_TYPE)%"
            $clientId: "%env(TOTALSOCIAL_API_CLIENT_ID)%"
            $clientSecret: "%env(TOTALSOCIAL_API_CLIENT_SECRET)%"
            
    app.login_api_request_data_provider:
        alias: App\Api\Provider\LoginApiRequestDataProvider
        public: true
        
    app.api_response_provider:
        alias: App\Api\Response\ApiResponseProvider
        public: true

    app.event.authentication_failure_listener:
        class: App\Api\EventListener\AuthenticationFailureListener
        arguments: ["@app.api_response_provider"]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }
            
    api.event.jwt_invalid_listener:
        class: App\Api\EventListener\JWTInvalidListener
        arguments: ["@app.api_response_provider"]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJWTNotFound }
            
    api.event.jwt_expired_listener:
        class: App\Api\EventListener\JWTExpiredListener
        arguments: ["@app.api_response_provider"]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }